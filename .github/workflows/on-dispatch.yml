name: Handle Metadata Dispatch

on:
  repository_dispatch:
    types: [new-release]

jobs:
  handle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.METADATA_REPO_PAT }}

      - name: Extract Payload
        id: vars
        run: |
            echo "REPO=${{ github.event.client_payload.sender }}" >> $GITHUB_ENV
            echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV
            echo "CONFIG=$(echo '${{ toJson(github.event.client_payload.config) }}')" >> $GITHUB_ENV
            echo 'CONFIG<<EOF' >> $GITHUB_ENV
            echo '${{ toJson(github.event.client_payload.config) }}' >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV

      - name: Parse Version
        run: |
            IFS='.' read -r MAJOR MINOR PATCH <<< "${VERSION}"
            echo "MAJOR=$MAJOR" >> $GITHUB_ENV
            echo "MINOR=$MINOR" >> $GITHUB_ENV
            echo "PATCH=$PATCH" >> $GITHUB_ENV
      
      - name: Debug ENV values
        run: |
            echo "REPO=$REPO"
            echo "VERSION=$VERSION"
            echo "CONFIG=$CONFIG"
            echo "GITHUB_ACTOR=$GITHUB_ACTOR"
            echo "MAJOR=$MAJOR"
            echo "MINOR=$MINOR"
            echo "PATCH=$PATCH"

      - name: Create Metadata File
        run: |
            mkdir -p ${REPO}/${MAJOR}/${MINOR}
            echo "$CONFIG" > ${REPO}/${MAJOR}/${MINOR}/${PATCH}.json

      - name: Compute safe branch name
        id: branch
        run: |
            safe_repo_name="${REPO//\//-}"
            echo "safe_repo_name=$safe_repo_name" >> $GITHUB_OUTPUT
            echo "branch_name=metadata-${safe_repo_name}-${VERSION}" >> $GITHUB_OUTPUT

      - name: Configure git user
        run: |
            git config user.name "metadata-bot"
            git config user.email "metadata-bot@users.noreply.github.com"

      - name: Commit + Open PR
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.METADATA_REPO_PAT }}
          commit-message: "Add metadata for ${REPO}@${VERSION}"
          title: "Add metadata for ${REPO}@${VERSION}"
          body: |
            This PR contains configuration metadata for:
            - Repo: `${REPO}`
            - Version: `${VERSION}`
          branch: ${{ steps.branch.outputs.branch_name }}